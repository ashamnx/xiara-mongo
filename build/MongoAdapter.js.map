{"version":3,"sources":["../source/MongoAdapter.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,2CAA+C;AAG/C;IAAkC,gCAAe;IAGhD,sBAAa,OAA2B;eAEvC,kBAAM,OAAO,CAAC;IACf,CAAC;IAED,gCAAS,GAAT,UAAW,WAAqC;QAAhD,iBAaC;QAXA,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAC,SAAS;YACpC,EAAE,CAAA,CAAC,SAAS,CAAC,CACb,CAAC;gBACA,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,GAAG,CAAA,CAAmB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW;oBAA7B,IAAI,UAAU,oBAAA;oBAEjB,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;iBAChC;YACF,CAAC;QACF,CAAC,CAAC,CAAC;IAEJ,CAAC;IAED,qCAAc,GAAd,UAAe,UAAkC;QAEhD,IAAI,MAAM,GAAG,UAAU,CAAC,SAAS,EAAE,CAAC;QACpC,MAAM,CAAC,OAAO,EAAE,CAAC;QACjB,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,wCAAwC;QACxE,MAAM,CAAC,gBAAgB,EAAE,CAAC;QAE1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IACF,mBAAC;AAAD,CAhCA,AAgCC,CAhCiC,4BAAe,GAgChD;AAhCY,oCAAY;AAgCxB,CAAC","file":"MongoAdapter.js","sourcesContent":["import { IConnectionOptions } from \"./Utils\";\r\nimport { MongoConnection } from \"./Connection\";\r\nimport { ICollection, MongoCollection, MongoSchema } from \"./Definitions\"\r\n\r\nexport class MongoAdapter extends MongoConnection\r\n{\r\n\tcollections: typeof MongoCollection[];\r\n\tconstructor( options: IConnectionOptions)\r\n\t{\r\n\t\tsuper(options);\r\n\t}\r\n\r\n\tbootstrap( collections: typeof MongoCollection[] )\r\n\t{\r\n\t\tthis.OnConnect().subscribe((connected) => {\r\n\t\t\tif(connected)\r\n\t\t\t{\r\n\t\t\t\tthis.collections = [];\r\n\t\t\t\tfor(let collection of collections)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.initCollection(collection);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\tinitCollection(collection: typeof MongoCollection)\r\n\t{\r\n\t\tlet schema = collection.getSchema();\r\n\t\tschema.prepare();\r\n\t\tschema.setConnection(this._db); // Connect the schema with this adapter.\r\n\t\tschema.createCollection();\r\n\r\n\t\tthis.collections.push(collection);\r\n\t}\r\n};"]}