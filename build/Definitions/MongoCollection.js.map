{"version":3,"sources":["../source/Definitions/MongoCollection.ts"],"names":[],"mappings":"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","file":"MongoCollection.js","sourcesContent":["import { MongoAdapter } from \"../MongoAdapter\";\nimport { MongoSchema, IProperty } from \"./MongoSchema\";\nimport { Property } from \"./Decorators\";\nimport { MongoQuery, MongoQueryMulti, MongoQuerySingle } from \"./Query\";\nimport { Db, Collection, Cursor, AggregationCursor, ObjectId, WriteOpResult, InsertOneWriteOpResult, UpdateWriteOpResult, CollectionInsertOneOptions, ReplaceOneOptions, DeleteWriteOpResultObject, ReplaceWriteOpResult, InsertWriteOpResult, CollStats, FindOneAndReplaceOption, FindAndModifyWriteOpResultObject } from \"mongodb\";\n//import { IFindQuery } \"./FindQuery\";\nimport { MongoSchemaRegistry } from \"./MongoSchemaRegistry\";\nimport { ObjectID } from \"bson\";\nexport interface ICollection\n{\n\tgetSchemaDefinition(): MongoSchema;\n};\n\nexport class MongoCollection implements ICollection\n{\n\n\t@Property()\n\t_id: ObjectId;\n\t//_version: number;\n\n\tconstructor(data: any = null)\n\t{\n\t\tif(data != null)\n\t\t{\n\t\t\tthis.hydrate(data);\n\t\t}\n\t}\n\n\tstatic constructCollection<T>(type: new () => T): T\n\t{\n\t\treturn new type();\n\t}\n\n\thydrate(data: any)\n\t{\n\t\tif(!data)\n\t\t\treturn;\n\t\t\t\n\t\tlet schema = this.getSchemaDefinition();\n\t\tfor(let field of schema.fields)\n\t\t{\n\t\t\tif(field.options)\n\t\t\t{\n\t\t\t\tif(data[field.name] === undefined && field.options.default !== undefined)\n\t\t\t\t{\n\t\t\t\t\tif(field.options.default.name == \"Date\")\n\t\t\t\t\t{\n\t\t\t\t\t\tthis[field.name] = new field.options.default();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(typeof field.options.default === \"function\")\n\t\t\t\t\t{\n\t\t\t\t\t\tthis[field.name] = field.options.default();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthis[field.name] = field.options.default;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (data[field.name] && field.options.reference && typeof data[field.name] === \"object\")\n\t\t\t\t{\n\t\t\t\t\tlet referencedCollection = new field.options.reference();\n\t\t\t\t\treferencedCollection.hydrate(data[field.name]);\n\t\t\t\t\tthis[field.name] = referencedCollection;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis[field.name] = data[field.name];\n\t\t}\n\t}\n\n\tdehydrate(fields: IProperty[], dropReferences: boolean = false): object\n\t{\n\t\tlet rawData = {};\n\t\tfor(let field of fields)\n\t\t{\n\t\t\tif(field.options.reference && dropReferences)\n\t\t\t{\n\t\t\t\tif(this[field.name] === undefined || this[field.name] === null)\n\t\t\t\t\tcontinue;\n\n\t\t\t\trawData[field.name] = this[field.name][field.options.by || \"_id\"];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif((this[field.name] === undefined  || this[field.name] === null) && field.options.default !== undefined)\n\t\t\t{\n\t\t\t\tif(field.options.default.name == \"Date\")\n\t\t\t\t{\n\t\t\t\t\trawData[field.name] = new field.options.default();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(typeof field.options.default === \"function\")\n\t\t\t\t{\n\t\t\t\t\trawData[field.name] = field.options.default();\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\trawData[field.name] = field.options.default;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\trawData[field.name] = this[field.name];\n\t\t\t}\n\t\t\t\n\t\t}\n\t\treturn rawData;\n\t}\n\n\ttoMongoStore()\n\t{\n\t\tlet schema = this.getSchemaDefinition();\n\t\treturn this.dehydrate(schema.fields, true);\n\t}\n\n\ttoObject(): object\n\t{\n\t\tlet schema = this.getSchemaDefinition();\n\t\treturn this.dehydrate(schema.fields);\n\t}\n\n\t// Same as dehydrate but drops the hidden fields\n\ttoJSON()\n\t{\n\t\tlet schema = this.getSchemaDefinition();\n\t\treturn this.dehydrate(schema.getVisibleFields());\n\t}\n\n\tgetValidatedObject(): object\n\t{\n\t\tlet schema = this.getSchemaDefinition();\n\t\tlet collection = schema.collection();\n\t\tlet data = this.toObject();\n\t\tlet validationResult = schema.validate(data);\n\t\tif(!validationResult)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate static sanitizeQuery(query: any)\n\t{\n\t\tif(query && query._id && typeof query._id === \"string\")\n\t\t{\n\t\t\tquery._id = new ObjectID(query._id);\n\t\t}\n\t}\n\n\tstatic query<T extends MongoCollection>(query?: Object): MongoQuery< T >\n\t{\n\t\tMongoCollection.sanitizeQuery(query);\n\t\treturn new MongoQuery<T>(this, query);\n\t}\n\n\tstatic find<T extends MongoCollection>(query?: Object): MongoQueryMulti< T >\n\t{\n\t\tMongoCollection.sanitizeQuery(query);\n\t\treturn new MongoQueryMulti<T>(this, query);\n\t}\n\t\n\tstatic findOne<T extends MongoCollection>(query?: Object): MongoQuerySingle< T >\n\t{\n\t\tMongoCollection.sanitizeQuery(query);\n\t\treturn new MongoQuerySingle<T>(this, query);\n\t}\n\n\tstatic findLast<T extends MongoCollection>(query?: Object): MongoQuerySingle< T >\n\t{\n        console.log('query::::', query);\n\t\tMongoCollection.sanitizeQuery(query);\n\t\treturn new MongoQuerySingle<T>(this, query);\n\t}\n\n\tstatic createOne<T extends MongoCollection>(data?: Object): Promise< T >\n\t{\n\t\tlet instance: T = this.constructCollection<T>(<any>this);\n\t\tinstance.hydrate(data);\n\t\treturn instance.save();\n\t}\n\n\tstatic findOneAndUpdate<T extends MongoCollection>(query?: Object, data?: Object, options: FindOneAndReplaceOption = undefined): Promise<FindAndModifyWriteOpResultObject>\n\t{\n\t\tMongoCollection.sanitizeQuery(query);\n\t\tlet collection = this.getSchema().collection();\n\t\treturn collection.findOneAndUpdate(query, {\n\t\t\t$set: data\n\t\t}, options).then( result => {\n\t\t\tif(options && options.returnOriginal)\n\t\t\t{\n\t\t\t\treturn result.value;\n\t\t\t}\n\t\t\treturn result;\n\t\t}).catch( error => {\n\t\t\treturn error;\n\t\t})\n\t}\n\n\tstatic findByIdAndUpdate<T extends MongoCollection>(_id?: Object, data?: Object): Promise<FindAndModifyWriteOpResultObject>\n\t{\n\t\tMongoCollection.sanitizeQuery(_id);\n\t\tlet collection = this.getSchema().collection();\n\t\treturn collection.findOneAndUpdate({_id: _id}, data).then( result => {\n\t\t\treturn result;\n\t\t}).catch( error => {\n\t\t\treturn error;\n\t\t})\n\t}\n\n\tstatic updateOne<T extends MongoCollection>(query?: Object, data?: Object, options: ReplaceOneOptions = undefined): Promise<UpdateWriteOpResult>\n\t{\n\t\tMongoCollection.sanitizeQuery(query);\n\t\tlet collection = this.getSchema().collection();\n\t\treturn collection.updateOne(query, {\n\t\t\t$set: data\n\t\t}, options);\n\t}\n\n\tstatic update<T extends MongoCollection>(query?: Object, data?: Object, options: ReplaceOneOptions & { multi?: boolean } = undefined): Promise<WriteOpResult>\n\t{\n\t\tMongoCollection.sanitizeQuery(query);\n\t\tlet collection = this.getSchema().collection();\n\t\treturn collection.update(query, {\n\t\t\t$set: data\n\t\t}, options);\n\t}\n\n\tstatic updateMany<T extends MongoCollection>(query?: Object, data?: Object, options: ReplaceOneOptions & { multi?: boolean } = undefined): Promise<UpdateWriteOpResult>\n\t{\n\t\tMongoCollection.sanitizeQuery(query);\n\t\tlet collection = this.getSchema().collection();\n\t\treturn collection.updateMany(query, data, options);\n\t}\n\n\tstatic remove(query: Object): Promise<WriteOpResult>\n\t{\n\t\tMongoCollection.sanitizeQuery(query);\n\t\tlet  collection = this.getSchema().collection();\n\t\treturn collection.remove(query);\n\t}\n\n\tstatic removeOne(query: Object): Promise<WriteOpResult>\n\t{\n\t\tMongoCollection.sanitizeQuery(query);\n\t\tlet  collection = this.getSchema().collection();\n\t\treturn collection.remove(query, {single: true});\n\t}\n\n\tstatic aggregate<T extends MongoCollection>(pipeline:any[] = []): AggregationCursor<T>\n\t{\n\t\treturn this.getCollection().aggregate(pipeline);\n\t}\n\n\tstatic getSchema(): MongoSchema\n\t{\n\t\treturn MongoSchemaRegistry.getSchema(this.name);\n\t}\n\n\tstatic getCollection(): Collection<any>\n\t{\n\t\treturn this.getSchema().collection();\n\t}\n\n\tstatic stats(): Promise<CollStats>\n\t{\n\t\treturn this.getCollection().stats();\n\t}\n\n\tcollection(): Collection<any>\n\t{\n\t\treturn this.getSchemaDefinition().collection();\n\t}\n\n\tgetSchemaDefinition(): MongoSchema\n\t{\n\t\treturn MongoSchemaRegistry.getSchema(this.constructor.name);\n\t\t//return (<any>this.constructor).SchemaDefinition;\n\t}\n\n\tsave(options: any = {}): Promise<any>\n\t{\n\t\tif(!this._id)\n\t\t{\n\t\t\treturn this.insert(options);\n\t\t}else{\n\t\t\treturn this.update(options);\n\t\t}\n\t}\n\n\tinsert(options: CollectionInsertOneOptions = undefined): Promise<this>\n\t{\n\t\tlet schema = this.getSchemaDefinition();\n\t\tlet collection = schema.collection();\n\t\tlet data = this.toMongoStore();\n\t\tlet validationResult = schema.validate(data);\n\t\tif(!validationResult)\n\t\t{\n\t\t\treturn collection.insertOne(data, options).then( result => {\n\t\t\t\tthis._id = result.insertedId; // Assign inserted _id\n\t\t\t\treturn this;\n\t\t\t});\n\t\t}\n\t\treturn Promise.reject(validationResult);\n\t}\n\t\n\tupdate(options: ReplaceOneOptions = undefined): Promise<this>\n\t{\n\t\tlet schema = this.getSchemaDefinition();\n\t\tlet collection = schema.collection();\n\t\tlet data = this.toMongoStore();\n\t\tlet validationResult = schema.validate(data);\n\t\tif(!validationResult)\n\t\t{\n\t\t\treturn collection.updateOne({\n\t\t\t\t_id: this._id,\n\t\t\t}, {\n\t\t\t\t$set: data\n\t\t\t}, options).then( result => {\n\t\t\t\treturn this;\n\t\t\t});\n\t\t}\n\t\treturn Promise.reject(validationResult);\n\t}\n\t\n\tremove(): Promise<any>\n\t{\n\t\tif(!this._id)\n\t\t{\n\t\t\treturn Promise.reject(\"_id is not defined\");\n\t\t}\n\n\t\treturn this.collection().deleteOne({\n\t\t\t_id: this._id\n\t\t});\n\t}\n\n\treplace(replaceWith: MongoCollection): Promise<WriteOpResult>\n\t{\n\t\tlet schema = replaceWith.getSchemaDefinition();\n\t\tlet collection = schema.collection();\n\t\tlet data = replaceWith.toMongoStore();\n\t\tlet validationResult = schema.validate(data);\n\t\tif(!validationResult)\n\t\t{\n\t\t\treturn this.collection().replaceOne({ _id: this._id }, data);\n\t\t}\n\t\treturn Promise.reject(validationResult);\n\t}\n};"]}