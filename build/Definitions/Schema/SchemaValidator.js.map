{"version":3,"sources":["../source/Definitions/Schema/SchemaValidator.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAE1B,mEAAsE;AAGtE;IAAA;IAwBA,CAAC;IAtBO,6BAAa,GAApB,UAAqB,KAAgB,EAAE,IAAY;QAElD,IAAG,IAAI,KAAK,SAAS,EACrB;YACC,IAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,EACzB;gBACC,OAAO,IAAI,mDAA0B,CAAC,KAAK,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;aACvE;YACD,OAAO,IAAI,CAAC;SACZ;QAGD,IAAG,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,EAC/C;YACC,IAAG,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,QAAQ,CAAC,EAC5F;gBACC,OAAO,IAAI,mDAA0B,CAAC,KAAK,CAAC,IAAI,EAAE,iBAAiB,GAAG,KAAK,CAAC,IAAI,GAAG,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC;aAC7I;SACD;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IACF,sBAAC;AAAD,CAxBA,AAwBC,IAAA;AAxBY,0CAAe;AAwB3B,CAAC","file":"SchemaValidator.js","sourcesContent":["import \"reflect-metadata\";\nimport { MongoSchema } from \"../MongoSchema\";\nimport { SchemaFieldValidationError } from \"./SchemaValidationResult\";\nimport { IProperty } from \"../MongoSchema\";\n\nexport class SchemaValidator\n{\n\tstatic validateField(field: IProperty, data: object): SchemaFieldValidationError\n\t{\n\t\tif(data === undefined)\n\t\t{\n\t\t\tif(field.options.required)\n\t\t\t{\n\t\t\t\treturn new SchemaFieldValidationError(field.name, \"Field Is required\");\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t\n\t\tif(data && data.constructor.name !== field.type)\n\t\t{\n\t\t\tif(!field.options.reference && (field.type !== 'Date' && data.constructor.name !== 'String'))\n\t\t\t{\n\t\t\t\treturn new SchemaFieldValidationError(field.name, \"Invalid Type: '\" + field.type + \"' is needed. '\" + data.constructor.name + \"' was given\");\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n};"]}