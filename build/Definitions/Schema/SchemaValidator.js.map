{"version":3,"sources":["../source/Definitions/Schema/SchemaValidator.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAE1B,mEAAsE;AAGtE;IAAA;IAwBA,CAAC;IAtBO,6BAAa,GAApB,UAAqB,KAAgB,EAAE,IAAY;QAElD,EAAE,CAAA,CAAC,IAAI,KAAK,SAAS,CAAC,CACtB,CAAC;YACA,EAAE,CAAA,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAC1B,CAAC;gBACA,MAAM,CAAC,IAAI,mDAA0B,CAAC,KAAK,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;YACxE,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAGD,EAAE,CAAA,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,CACxC,CAAC;YACA,EAAE,CAAA,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAC5B,CAAC;gBACA,MAAM,CAAC,IAAI,mDAA0B,CAAC,KAAK,CAAC,IAAI,EAAE,iBAAiB,GAAG,KAAK,CAAC,IAAI,GAAG,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC;YAC9I,CAAC;QACF,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IACF,sBAAC;AAAD,CAxBA,AAwBC,IAAA;AAxBY,0CAAe;AAwB3B,CAAC","file":"SchemaValidator.js","sourcesContent":["import \"reflect-metadata\";\r\nimport { MongoSchema } from \"../MongoSchema\";\r\nimport { SchemaFieldValidationError } from \"./SchemaValidationResult\";\r\nimport { IProperty } from \"../MongoSchema\";\r\n\r\nexport class SchemaValidator\r\n{\r\n\tstatic validateField(field: IProperty, data: object): SchemaFieldValidationError\r\n\t{\r\n\t\tif(data === undefined)\r\n\t\t{\r\n\t\t\tif(field.options.required)\r\n\t\t\t{\r\n\t\t\t\treturn new SchemaFieldValidationError(field.name, \"Field Is required\");\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t\r\n\t\tif(data.constructor.name !== field.type)\r\n\t\t{\r\n\t\t\tif(!field.options.reference)\r\n\t\t\t{\r\n\t\t\t\treturn new SchemaFieldValidationError(field.name, \"Invalid Type: '\" + field.type + \"' is needed. '\" + data.constructor.name + \"' was given\");\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t}\r\n};"]}