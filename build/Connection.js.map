{"version":3,"sources":["../source/Connection.ts"],"names":[],"mappings":";;AAAA,iCAAmE;AACnE,6BAAiD;AACjD,UAAU;AACV,mCAAgD;AAEhD;IAII,yBAAY,OAA2B;QAH7B,wBAAmB,GAA6B,IAAI,sBAAe,CAAU,IAAI,CAAC,CAAC;QACnF,QAAG,GAAG,IAAI,CAAC;QAGjB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAED,mCAAS,GAAT;QACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;IACnD,CAAC;IAED,iCAAO,GAAP,UAAQ,OAA2B;QAAnC,iBAaC;QAZG,IAAI,gBAAgB,GAAG,8BAAsB,CAAC,OAAO,CAAC,CAAC;QACvD,qBAAW,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAClC,aAAa,EAAE,IAAI;SACtB,EAAE,UAAC,KAAiB,EAAE,EAAE;YACrB,IAAI,KAAK,EAAE;gBACP,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACpC,MAAM,KAAK,CAAC;aACf;iBAAM;gBACH,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACnC,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAA8B;IAC9B,+BAAK,GAAL,UAAM,UAA2B;QAA3B,2BAAA,EAAA,kBAA2B;QAC7B,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACX,MAAM,KAAK,CAAC,gBAAgB,CAAC,CAAC;SACjC;QACD,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IACL,sBAAC;AAAD,CAlCA,AAkCC,IAAA;AAlCY,0CAAe;AAkC3B,CAAC","file":"Connection.js","sourcesContent":["import {CreateConnectionString, IConnectionOptions} from './Utils';\nimport {BehaviorSubject, Observable} from 'rxjs';\n// MongoDB\nimport {MongoClient, MongoError} from 'mongodb';\n\nexport class MongoConnection {\n    protected _OnConnectedSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\n    protected _db = null;\n\n    constructor(options: IConnectionOptions) {\n        this.connect(options);\n    }\n\n    OnConnect(): Observable<boolean> {\n        return this._OnConnectedSubject.asObservable();\n    }\n\n    connect(options: IConnectionOptions) {\n        let connectionString = CreateConnectionString(options);\n        MongoClient.connect(connectionString, {\n            autoReconnect: true,\n        }, (error: MongoError, db) => {\n            if (error) {\n                this._OnConnectedSubject.next(null);\n                throw error;\n            } else {\n                this._db = db.db(options.Database);\n                this._OnConnectedSubject.next(true);\n            }\n        });\n    }\n\n    // Closes the mongo connection\n    close(forceClose: boolean = false): Promise<void> {\n        if (!this._db) {\n            throw Error('Not connected.');\n        }\n        return this._db.close(forceClose);\n    }\n};"]}